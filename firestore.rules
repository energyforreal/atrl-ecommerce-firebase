rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }
    
    function isAdmin() {
      return isSignedIn() && 
             exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Users collection - users can read/write their own profile
    match /users/{uid} {
      allow read: if isOwner(uid) || isAdmin();
      allow create: if isOwner(uid);
      allow update: if isOwner(uid) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Addresses collection - users can manage their own addresses
    match /addresses/{addressId} {
      allow read: if isSignedIn() && 
                     (resource.data.uid == request.auth.uid || isAdmin());
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow update: if isSignedIn() && resource.data.uid == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.uid == request.auth.uid;
    }
    
    // Orders collection - users can read their own orders, create new ones
    // Updates only by admin or server (via Firebase Admin SDK)
    match /orders/{orderId} {
      allow read: if isSignedIn() && 
                     (resource.data.uid == request.auth.uid || isAdmin());
      allow create: if isSignedIn() && 
                       request.resource.data.uid == request.auth.uid &&
                       request.resource.data.status == 'pending';
      // Only admin can update orders (or server via Admin SDK bypasses rules)
      allow update: if isAdmin();
      allow delete: if isAdmin();
      
      // Allow subcollection for affiliate usage tracking
      match /affiliate_usage/{usageId} {
        allow read: if isAdmin();
        allow write: if false; // Only server can write via Admin SDK
      }
    }
    
    // Order status history - read by order owner, write only by server
    match /order_status_history/{historyId} {
      allow read: if isSignedIn();
      allow write: if false; // Only server can write via Admin SDK
    }
    
    // Products collection - public read, admin write
    match /products/{productId} {
      allow read: if true; // Public catalog
      allow create, update, delete: if isAdmin();
    }
    
    // Categories collection - public read, admin write
    match /categories/{categoryId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Coupons collection - public read (for validation), admin write
    // Server can increment usage via Admin SDK
    match /coupons/{couponId} {
      allow read: if true; // Clients need to validate coupons
      allow create, update, delete: if isAdmin();
      
      // Subcollection for usage tracking
      match /usage/{usageId} {
        allow read: if isAdmin();
        allow write: if false; // Only server via Admin SDK
      }
    }
    
    // Affiliates collection - users can read/update their own profile
    match /affiliates/{affiliateId} {
      allow read: if isSignedIn() && 
                     (resource.data.uid == request.auth.uid || isAdmin());
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow update: if isSignedIn() && 
                       (resource.data.uid == request.auth.uid || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Affiliate codes mapping - read for existence checks, write by server only
    match /affiliateCodes/{code} {
      allow read: if true; // Need to check code availability
      allow write: if false; // Only server via Admin SDK
    }
    
    // Affiliate commissions - read by affiliate owner, write by server
    match /affiliate_commissions/{commissionId} {
      allow read: if isSignedIn() && 
                     (resource.data.affiliateId == request.auth.uid || isAdmin());
      allow write: if false; // Only server via Admin SDK
    }
    
    // Newsletter subscriptions - anyone can subscribe
    match /newsletter/{subscriberId} {
      allow read: if isAdmin();
      allow create: if request.resource.data.email is string &&
                       request.resource.data.email.matches('.*@.*\\..*');
      allow update, delete: if isAdmin();
    }
    
    // Admin collection - only accessible by existing admins
    match /admins/{adminId} {
      allow read, write: if isAdmin();
    }
    
    // Contact messages - anyone can create, only admin can read
    match /messages/{messageId} {
      allow read: if isAdmin();
      allow create: if request.resource.data.email is string;
      allow update, delete: if isAdmin();
    }
    
    // Deny all other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

